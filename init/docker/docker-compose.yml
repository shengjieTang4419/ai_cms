version: '3.8'
services:
  cloud-redis:
    container_name: cloud-redis
    image: redis
    build:
      context: ./redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/conf/redis.conf:/home/cloud/redis/redis.conf
      - ./redis/data:/data
    command: redis-server /home/cloud/redis/redis.conf
    environment:
      - TZ=Asia/Shanghai
    networks:
      - cloud-network

  cloud-mongodb:
    image: mongo:latest
    container_name: cloud-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: sangfor!@#123
      TZ: Asia/Shanghai
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/logs:/var/log/mongodb
      - ./mongodb/init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    command:
      - --auth
      - --bind_ip_all
      - --logpath=/var/log/mongodb/mongod.log
    networks:
      - cloud-network

  cloud-postgres:
    image: pgvector/pgvector:pg17 # 使用支持pgvector的PostgreSQL镜像
    container_name: cloud-postgres
    environment:
      POSTGRES_DB: 'small_basic' # 数据库名称
      POSTGRES_USER: 'postgres' # 用户名
      POSTGRES_PASSWORD: 'small@123$%^' # 密码
      TZ: "Asia/Shanghai"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data # 数据持久化
      - /etc/localtime:/etc/localtime:ro # 时区同步
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "timezone=Asia/Shanghai"
    networks:
      - cloud-network

  cloud-minio:
    image: minio/minio:latest
    container_name: cloud-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      TZ: Asia/Shanghai
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio
    ports:
      - "9000:9000" # API端口
      - "9001:9001" # Console端口
    command: server /data --console-address ":9001"
    networks:
      - cloud-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  cloud-network:
